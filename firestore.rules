rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // ユーザー認証と契約期間チェック
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isContractActive() {
      // ユーザーデータから契約期間を確認
      let userData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      let now = request.time;
      let contractEndDate = userData.contractEndDate;
      let status = userData.status;
      
      return status == 'active' && 
             contractEndDate != null && 
             contractEndDate.toDate() > now;
    }
    
    // ユーザーコレクション - 契約期間チェック付き
    match /users/{userId} {
      // 自分自身のデータは読み取り可能
      allow read: if isAuthenticated() && request.auth.uid == userId;
      // 管理者は読み書き可能
      allow read, write: if isAuthenticated() && 
                               request.auth.token.admin == true;
      // 契約期間内のユーザーのみ書き込み可能
      allow write: if isAuthenticated() && 
                        request.auth.uid == userId && 
                        isContractActive();
      // 新規ユーザー作成時（登録時）
      allow create: if isAuthenticated() && 
                         request.auth.uid == userId;
    }
    
    // 開発環境用: 全てのアクセスを許可（本番環境では削除）
    match /{document=**} {
      allow read, write: if true;
    }
    
    // ブログ記事関連のルール（将来の本番環境用）
    match /blogPosts/{postId} {
      // 公開済み記事は誰でも読み取り可能
      allow read: if resource.data.status == 'published';
      // 管理者のみ作成・更新・削除可能
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    match /blogCategories/{categoryId} {
      // 誰でも読み取り可能
      allow read: if true;
      // 管理者のみ作成・更新・削除可能
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    match /blogTags/{tagId} {
      // 誰でも読み取り可能
      allow read: if true;
      // 管理者のみ作成・更新・削除可能
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
